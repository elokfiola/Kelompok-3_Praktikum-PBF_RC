# -*- coding: utf-8 -*-
"""Modul 6

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1REFyy_1GWgci1bUUAlivuHWyAF_yxbE5
"""

from functools import reduce

# Inisialisasi list untuk menyimpan data mata kuliah
courses = []

# Fungsi untuk menyimpan data mata kuliah ke dalam file teks
def save_courses_to_file(courses):
    with open("courses.txt", "w") as file:
        for course in courses:
            file.write(f"{course['kode']},{course['nama']},{course['sks']},{course['jam']},{course['hari']}\n")

# Fungsi untuk membaca data mata kuliah dari file teks
def load_courses_from_file():
    try:
        with open("courses.txt", "r") as file:
            for line in file:
                kode, nama, sks, jam, hari = line.strip().split(",")
                courses.append({"kode": kode, "nama": nama, "sks": int(sks), "jam": jam, "hari": hari})
    except FileNotFoundError:
        print("File tidak ditemukan. Mohon masukkan data mata kuliah terlebih dahulu.")

# Fungsi untuk memasukkan data mata kuliah baru
def input_new_course():
    print("Masukkan data mata kuliah baru:")
    kode = input("Kode Mata Kuliah: ")
    nama = input("Nama Mata Kuliah: ")
    sks = int(input("Jumlah SKS: "))
    jam = input("Jam Kuliah: ")
    hari = input("Hari Kuliah: ")
    return {"kode": kode, "nama": nama, "sks": sks, "jam": jam, "hari": hari}

# Fungsi Higher-Order untuk menyaring mata kuliah berdasarkan preferensi
def filter_courses(courses, criteria_func):
    return list(filter(criteria_func, courses))

# Fungsi untuk mencari mata kuliah berdasarkan nama atau kode mata kuliah
def search_by_keyword(keyword):
    def search(course):
        return keyword.lower() in course["nama"].lower() or keyword.lower() in course["kode"].lower()
    return search

# Fungsi untuk mencari mata kuliah berdasarkan rentang jumlah SKS
def sks_in_range(min_sks, max_sks):
    def range_filter(course):
        return min_sks <= course["sks"] <= max_sks
    return range_filter

# Fungsi untuk mencari mata kuliah berdasarkan waktu kuliah
def search_by_time(time):
    def time_filter(course):
        start_time = int(course["jam"].split(":")[0].strip())
        return start_time <= time
    return time_filter

# Fungsi untuk mencari mata kuliah berdasarkan hari kuliah
def search_by_day(day):
    def day_filter(course):
        return day.lower() in course["hari"].lower()
    return day_filter

# Fungsi untuk menghitung total SKS dari daftar mata kuliah
def calculate_total_sks(courses):
    return reduce(lambda total, course: total + course["sks"], courses, 0)

# Fungsi untuk menampilkan data mata kuliah
def display_courses(courses):
    if not courses:
        print("Tidak ada data mata kuliah yang tersedia.")
    else:
        print("Data Mata Kuliah:")
        for course in courses:
            print("Kode:", course["kode"])
            print("Nama:", course["nama"])
            print("SKS:", course["sks"])
            print("Jam:", course["jam"])
            print("Hari:", course["hari"])
            print("-------------------")

# Inputan perintah untuk melakukan pencarian
def search_courses():
    keyword = input("Masukkan kata kunci (nama atau kode mata kuliah): ")
    min_sks = int(input("Masukkan jumlah SKS minimum: "))
    max_sks = int(input("Masukkan jumlah SKS maksimum: "))
    time = int(input("Masukkan waktu pencarian (jam): "))
    day = input("Masukkan hari pencarian: ")

    filtered_courses = filter_courses(courses, search_by_keyword(keyword))
    filtered_courses = filter_courses(filtered_courses, sks_in_range(min_sks, max_sks))
    filtered_courses = filter_courses(filtered_courses, search_by_time(time))
    filtered_courses = filter_courses(filtered_courses, search_by_day(day))

    if filtered_courses:
        print("\nHasil Pencarian:")
        display_courses(filtered_courses)

        total_sks = calculate_total_sks(filtered_courses)
        print("Total SKS:", total_sks)
    else:
        print("\nMaaf, tidak ada mata kuliah yang sesuai dengan kriteria pencarian.")

# Inputan perintah untuk menambahkan atau mencari mata kuliah
def main_menu():
    load_courses_from_file()
    while True:
        print("\nPilih Menu:")
        print("1. Tambah Mata Kuliah")
        print("2. Cari Mata Kuliah")
        print("3. Tampilkan Semua Mata Kuliah")
        print("4. Keluar")
        choice = input("Masukkan pilihan (1/2/3/4): ")

        if choice == "1":
            new_course = input_new_course()
            courses.append(new_course)
            save_courses_to_file(courses)
            print("Mata kuliah berhasil ditambahkan.")
        elif choice == "2":
            search_courses()
        elif choice == "3":
            display_courses(courses)
        elif choice == "4":
            print("Terima kasih! Sampai jumpa.")
            break
        else:
            print("Pilihan tidak valid. Silakan pilih lagi.")

# Panggil fungsi utama saat program dijalankan
main_menu()