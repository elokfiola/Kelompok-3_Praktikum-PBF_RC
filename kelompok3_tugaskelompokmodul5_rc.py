# -*- coding: utf-8 -*-
"""Kelompok3_TugasKelompokModul5_RC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ovN0SQnpFlMvtytpRVcpHQR_T2FsLQ6J
"""

import functools

def jadwal():
    courses = {}

    def add_course_decorator(func):
        @functools.wraps(func)
        def wrapper(course_name, hari, jam_mulai, jam_selesai):
            nonlocal courses
            schedule = f"{hari} {jam_mulai}-{jam_selesai}"
            courses[course_name] = schedule
            print(f"{course_name} berhasil ditambahkan ke jadwal studi.")

            # Simpan jadwal ke dalam file setelah penambahan
            save_schedule_to_file(courses)

        return wrapper

    def remove_course_decorator(func):
        @functools.wraps(func)
        def wrapper(course_name):
            nonlocal courses
            if course_name in courses:
                del courses[course_name]
                print(f"{course_name} berhasil dihapus dari jadwal studi.")

                # Simpan jadwal yang sudah diperbarui ke dalam file setelah penghapusan
                save_schedule_to_file(courses)
            else:
                print(f"Tidak ada {course_name} dalam jadwal studi.")

        return wrapper

    def change_schedule_decorator(func):
        @functools.wraps(func)
        def wrapper(course_name, new_hari, new_jam_mulai, new_jam_selesai):
            nonlocal courses
            if course_name in courses:
                new_schedule = f"{new_hari} {new_jam_mulai}-{new_jam_selesai}"
                courses[course_name] = new_schedule
                print(f"Jadwal {course_name} berhasil diubah.")

                # Simpan jadwal yang sudah diperbarui ke dalam file setelah perubahan
                save_schedule_to_file(courses)
            else:
                print(f"Tidak ada {course_name} dalam jadwal studi.")

        return wrapper

    def save_schedule_to_file(courses):
        with open("jadwal.txt", "w") as file:
            for course, schedule in courses.items():
                hari, time_range = schedule.split(" ")
                jam_mulai, jam_selesai = time_range.split("-")
                file.write(f"{course},{hari},{jam_mulai},{jam_selesai}\n")

    def load_schedule_from_file():
        try:
            with open("jadwal.txt", "r") as file:
                for line in file:
                    course_info = line.strip().split(",")
                    course_name = course_info[0]
                    hari = course_info[1]
                    jam_mulai = course_info[2]
                    jam_selesai = course_info[3]
                    schedule = f"{hari} {jam_mulai}-{jam_selesai}"
                    courses[course_name] = schedule
        except FileNotFoundError:
            pass  # Biarkan kosong jika file tidak ditemukan

    # Muat jadwal dari file saat program dimulai
    load_schedule_from_file()

    @add_course_decorator
    def add_course(course_name, hari, jam_mulai, jam_selesai):
        pass

    @remove_course_decorator
    def remove_course(course_name):
        pass

    @change_schedule_decorator
    def change_schedule(course_name, new_hari, new_jam_mulai, new_jam_selesai):
        pass

    return add_course, remove_course, change_schedule

def display_schedule(courses):
    print("Jadwal Studi:")
    if not courses:
        print("Tidak ada mata kuliah dalam jadwal studi.")
    else:
        for course, schedule in courses.items():
            course_name = course
            hari, time_range = schedule.split(" ")
            jam_mulai, jam_selesai = time_range.split("-")
            print(f"{course_name}: {hari}, Jam Mulai - Jam Selesai: {jam_mulai} - {jam_selesai}")

# Program Usage
add_course, remove_course, change_schedule = jadwal()

while True:
    print("Welcome! Lets Organize your Schedule!")
    print("\nMenu:")
    print("1. Tambahkan Kursus Baru")
    print("2. Hapus Kursus")
    print("3. Ubah Jadwal Kursus")
    print("4. Tampilkan Jadwal Studi")
    print("5. Exit program")
    choice = input("Pilih menu: ")

    if choice == "1":
        course_name = input("Masukkan nama kursus: ")
        hari = input("Masukkan hari jadwal : ")
        jam_mulai = input("Masukkan jam mulai : ")
        jam_selesai = input("Masukkan jam selesai : ")
        add_course(course_name, hari, jam_mulai, jam_selesai)  # Memanggil add_course dengan argumen yang sesuai
    elif choice == "2":
        course_name = input("Masukkan nama kursus yang akan dihapus: ")
        remove_course(course_name)  # Memanggil remove_course dengan argumen yang sesuai
    elif choice == "3":
        course_name = input("Masukkan nama kursus yang jadwalnya akan diubah: ")
        new_hari = input("Masukkan hari baru : ")
        new_jam_mulai = input("Masukkan jam mulai baru  ")
        new_jam_selesai = input("Masukkan jam selesai baru : ")
        change_schedule(course_name, new_hari, new_jam_mulai, new_jam_selesai)  # Memanggil change_schedule dengan argumen yang sesuai
    elif choice == "4":
        display_schedule(add_course.__closure__[0].cell_contents)  # Ambil courses dari closure
    elif choice == "5":
        print("Thanks for trusting us , see you! :)")
        break
    else:
        print("Menu tidak valid. Silakan pilih kembali.")